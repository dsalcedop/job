package tdnafilter;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import org.apache.commons.lang.StringUtils;

public class TDNAFilter {

    public static void main(String[] args) {

        try {
            File f = new File("/home/x-dens/TDNA/Pruebas/miof.txt");
            File f1 = new File("/home/x-dens/TDNA/Pruebas/lev.txt");
            FileInputStream fstream = new FileInputStream("/home/x-dens/TDNA/Pruebas/1ArchFGripa.txt");
            DataInputStream entrada = new DataInputStream(fstream);
            BufferedReader buffer = new BufferedReader(new InputStreamReader(entrada));
            FileWriter w = new FileWriter(f);
            FileWriter w1 = new FileWriter(f1);
            BufferedWriter bw = new BufferedWriter(w);
            BufferedWriter bw1 = new BufferedWriter(w1);
            PrintWriter wr = new PrintWriter(bw);
            PrintWriter wr1 = new PrintWriter(bw1);
            String linea;
            String enf1 = "Gripa";
            String enf2 = "gripa";
            String arr[];
            String arrglob[] = {"el", "para", "esa", "ella"};/*A definir*/
            String lineafinal = "";
            Pattern p = Pattern.compile("[^a-zA-Z\\s]");
            StringBuffer sb = new StringBuffer();
            int pos = 0;
            while ((linea = buffer.readLine()) != null) {
                Matcher m = p.matcher(linea);
                boolean resultado = m.find();
                while (resultado) {
                    m.appendReplacement(sb, "");
                    resultado = m.find();
                }
                linea = sb.toString();
                for (String arrglob1 : arrglob) {
                    if (linea.contains(arrglob1)) {
                        linea = linea.replaceAll(arrglob1+" ", "");
                    }
                }
                if (linea.startsWith(" ") || linea.endsWith(" ")) {
                    linea = linea.replaceFirst(" ", "");
                   // linea = StringUtils.reverse(linea);
                   // linea = linea.replaceFirst(" ", "");
                    //linea = StringUtils.reverse(linea);
                }
                
                arr = linea.split(" ");
                int tam=0;
               // System.out.println(linea);
                if(arr.length<=4)lineafinal=linea;
                else{
                    for (int i = 0; i < arr.length; i++) {
                        if(arr[i].equals(enf1)||arr[i].equals(enf2)){
                            pos = i;
                            break;
                        }
                    }
                    //System.out.println(pos);   
                    if(linea.contains("Esto de pasar")){
                        System.out.println("-");
                    }
                    if(pos==0||pos==1){
                        for (int i = pos; i < pos+3; i++) {
                            lineafinal+=arr[i]+" ";
                        }
                    }
                    else if(pos==arr.length-1||pos==arr.length-2){
                        for (int i = (pos-3); i < arr.length; i++) {
                            lineafinal+=arr[i]+" ";
                        }
                    }
                    else {
                        //System.out.println("ERROR"+pos+"ARR"+arr.length);
                        tam = (pos+3);
                        if(tam>arr.length){
                            tam=tam-1;
                        }
                        
                        for (int i = (pos-2); i < tam; i++) {
                            lineafinal+=arr[i]+" ";
                        }
                    }
                }
                System.out.println(lineafinal);
                wr.write(lineafinal + "\n");
                int promedio = (StringUtils.getLevenshteinDistance(lineafinal, enf1)+StringUtils.getLevenshteinDistance(lineafinal, enf2))/2;
                wr1.write(String.valueOf(promedio)+"\n");
                linea="";
                lineafinal="";
                pos=0;
                tam=0;
                sb = new StringBuffer();
            }
            entrada.close();
            wr.close();
            wr1.close();
            bw.close();
            bw1.close();
        } catch (Exception e) {
            System.out.println("Fallo: " + e.getLocalizedMessage());
        }
    }
}
